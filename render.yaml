# render.yaml (Final, Complete & Verified Production Deployment)

envVarGroups:
  - name: ainudge-env-group
    envVars:
      # --- Configuration Variables ---
      - key: ENVIRONMENT
        value: production
      - key: PYTHONUNBUFFERED
        value: "1"
      - key: FRONTEND_APP_URL
        value: "https://www.ainudge.app"
      - key: GOOGLE_REDIRECT_URI
        value: "https://ainudge.app/api/auth/google/callback"
      - key: FAQ_AUTO_REPLY_ENABLED
        value: "true"
      - key: LLM_PROVIDER
        value: "openai"
      - key: MLS_PROVIDER
        value: "flexmls_reso"
      # --- Secrets & API Keys (sync: false prevents exposure) ---
      - key: GOOGLE_API_KEY
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: GOOGLE_CSE_ID
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: RESO_API_BASE_URL
        sync: false
      - key: RESO_API_TOKEN
        sync: false
      - key: SECRET_KEY
        sync: false
      - key: SPARK_API_DEMO_TOKEN
        sync: false
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_DEFAULT_MESSAGING_SERVICE_SID
        sync: false
      - key: TWILIO_PHONE_NUMBER
        sync: false
      - key: TWILIO_VERIFY_SERVICE_SID
        sync: false

databases:
  - name: realestate-db
    databaseName: realestate_db
    user: postgres
    plan: free
    postgresMajorVersion: 15

redis:
  - name: redis-cache
    plan: free
    ipAllowList: []

services:
  # ---------- BACKEND (FastAPI) ----------
  - type: web
    name: backend
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./backend/Dockerfile
    healthCheckPath: /test-db
    envVarGroups:
      - ainudge-env-group
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: realestate-db
          property: connectionString
      - key: REDIS_URL
        fromRedis:
          name: redis-cache
          property: connectionString
    startCommand: >
      sh -c "alembic upgrade head && uvicorn api.main:app --host 0.0.0.0 --port $PORT"
    plan: starter

  # ---------- FRONTEND (Next.js) ----------
  - type: web
    name: frontend
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./frontend/Dockerfile
    envVarGroups:
      - ainudge-env-group
    envVars:
      - key: NEXT_PUBLIC_API_URL
        fromService:
          type: web
          name: backend
          property: url
      - key: NODE_ENV
        value: production
    startCommand: "npm start"
    plan: starter
    buildFilter:
      paths:
        - "frontend/**"
        - "render.yaml"

  # ---------- CELERY WORKER ----------
  - type: worker
    name: celery-worker
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./backend/Dockerfile
    envVarGroups:
      - ainudge-env-group
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: realestate-db
          property: connectionString
      - key: REDIS_URL
        fromRedis:
          name: redis-cache
          property: connectionString
      - key: RUNNING_IN_CELERY
        value: "true"
    startCommand: "celery -A celery_worker.celery_app worker --loglevel=info --concurrency=2"
    plan: starter

  # ---------- CELERY BEAT SCHEDULER ----------
  - type: worker
    name: celery-beat
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./backend/Dockerfile
    envVarGroups:
      - ainudge-env-group
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: realestate-db
          property: connectionString
      - key: REDIS_URL
        fromRedis:
          name: redis-cache
          property: connectionString
      - key: RUNNING_IN_CELERY
        value: "true"
    startCommand: "celery -A celery_worker.celery_app beat --loglevel=info"
    plan: starter