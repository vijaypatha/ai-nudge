services:
  # Main Backend API Service
  - type: web
    name: ai-nudge-backend
    [cite_start]env: docker # Changed from python to docker [cite: 3]
    plan: free # Or hobby, standard, etc.
    rootDir: backend
    # [cite_start]buildCommand removed - Dockerfile will now handle the build [cite: 3]
    startCommand: uvicorn api.main:app --host 0.0.0.0 --port $PORT
    envVars:
      - key: PYTHONPATH
        value: .
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-nudge-redis
          property: connectionString
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_DEFAULT_MESSAGING_SERVICE_SID
        sync: false
      - key: TWILIO_VERIFY_SERVICE_SID
        sync: false
      - key: GOOGLE_CLIENT_ID
        sync: false
      - key: GOOGLE_CLIENT_SECRET
        sync: false
      - key: ENVIRONMENT
        value: production
      - key: FRONTEND_APP_URL # Added this for backend to know frontend URL
        sync: false

  # Celery Worker Service
  - type: web
    name: ai-nudge-celery-worker
    [cite_start]env: docker # Changed from python to docker [cite: 3]
    plan: free # Or hobby, standard, etc.
    rootDir: backend
    # [cite_start]buildCommand removed - Dockerfile will now handle the build [cite: 3]
    startCommand: celery -A celery_worker.celery_app worker --loglevel=info
    envVars:
      - key: PYTHONPATH
        value: .
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-nudge-redis
          property: connectionString
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_DEFAULT_MESSAGING_SERVICE_SID
        sync: false
      - key: TWILIO_VERIFY_SERVICE_SID
        sync: false
      - key: ENVIRONMENT
        value: production
      - key: FRONTEND_APP_URL # Added this for backend to know frontend URL
        sync: false

  # Celery Beat Scheduler Service
  - type: web
    name: ai-nudge-celery-beat
    [cite_start]env: docker # Changed from python to docker [cite: 3]
    plan: free # Or hobby, standard, etc.
    rootDir: backend
    # [cite_start]buildCommand removed - Dockerfile will now handle the build [cite: 3]
    startCommand: celery -A celery_worker.celery_app beat --loglevel=info
    envVars:
      - key: PYTHONPATH
        value: .
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-nudge-redis
          property: connectionString
      - key: JWT_SECRET_KEY
        generateValue: true
      - key: OPENAI_API_KEY
        sync: false
      - key: TWILIO_ACCOUNT_SID
        sync: false
      - key: TWILIO_AUTH_TOKEN
        sync: false
      - key: TWILIO_DEFAULT_MESSAGING_SERVICE_SID
        sync: false
      - key: TWILIO_VERIFY_SERVICE_SID
        sync: false
      - key: ENVIRONMENT
        value: production
      - key: FRONTEND_APP_URL # Added this for backend to know frontend URL
        sync: false

  # Redis Service
  - type: redis # Explicitly define as a Redis service
    name: ai-nudge-redis
    plan: free # Or hobby, standard, etc. (must be a valid Redis plan)
    ipAllowList: [] # Allow all internal Render IPs to connect

databases:
  # PostgreSQL Database
  - name: ai-nudge-db
    databaseName: ai_nudge_db
    user: ai_nudge_user
    plan: free # Or hobby, standard, etc. (must be a valid PostgreSQL plan)