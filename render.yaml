# render.yaml (Updated with Auto-Deploy Disabled)

databases:
  - name: ai-nudge-db
    databaseName: ai_nudge_db
    user: ai_nudge_user
    plan: free

services:
  # ---------- BACKEND (FastAPI) ----------
  - type: web
    name: ai-nudge-backend
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./backend/Dockerfile
    healthCheckPath: /test-db
    plan: starter
    autoDeploy: false  # Add this line
    dockerCommand: >
      sh -c "alembic upgrade head && 
      echo '=== DATABASE STATE CHECK ===' && 
      python -c 'from sqlmodel import Session, select; from data.database import engine; from data.models import User; session = Session(engine); users = session.exec(select(User)).all(); print(f\"Found {len(users)} users in database\"); [print(f\"- {u.full_name} ({u.email})\") for u in users]; exit(0 if len(users) > 0 else 1)' && 
      if [ $? -eq 1 ]; then 
        echo '=== DATABASE IS EMPTY - RUNNING SEED ===' && 
        python create_super_user.py || echo '⚠️  Super user creation failed, continuing with seed data...' && 
        python -c 'import asyncio; from data.seed import seed_database; asyncio.run(seed_database())' && 
        echo '=== SEEDING COMPLETED ==='; 
      else 
        echo '=== DATABASE HAS DATA - SKIPPING SEED ==='; 
      fi && 
      echo '=== STARTING SERVER ===' && 
      uvicorn api.main:app --host 0.0.0.0 --port $PORT"
    envVars:
      - fromGroup: ainudge-env-group
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: ai-nudge-redis
          type: keyvalue
          property: connectionString

  # ---------- CELERY WORKER ----------
  - type: worker
    name: ai-nudge-celery-worker
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./backend/Dockerfile
    plan: starter
    autoDeploy: false  # Add this line
    dockerCommand: "celery -A backend.celery_worker.celery_app worker --loglevel=info --concurrency=2"
    envVars:
      - key: RUNNING_IN_CELERY
        value: "true"
      - fromGroup: ainudge-env-group
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: ai-nudge-redis
          type: keyvalue
          property: connectionString

  # ---------- CELERY BEAT SCHEDULER ----------
  - type: worker
    name: ai-nudge-celery-beat
    runtime: docker
    repo: https://github.com/vijaypatha/ai-nudge
    dockerfilePath: ./backend/Dockerfile
    plan: starter
    autoDeploy: false  # Add this line
    dockerCommand: "celery -A backend.celery_worker.celery_app beat --loglevel=info --schedule=/tmp/celerybeat-schedule"
    envVars:
      - key: RUNNING_IN_CELERY
        value: "true"
      - fromGroup: ainudge-env-group
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: ai-nudge-redis
          type: keyvalue
          property: connectionString

  # ---------- REDIS SERVICE ----------
  - type: keyvalue
    name: ai-nudge-redis
    plan: starter
    ipAllowList: []
