services:
  - type: job
    name: db-migration
    plan: free
    env: docker
    rootDir: backend
    startCommand: "alembic upgrade head"
    envVars:
      - fromGroup: ainudge-env-group

  # Main Backend API Service
  - type: web
    name: ai-nudge-backend
    env: docker
    plan: free
    rootDir: backend
    envVars:
      - key: PYTHONPATH
        value: .
      - key: RUNNING_IN_CELERY
        value: "true"
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-nudge-redis
          property: connectionString
      - key: JWT_SECRET_KEY
        generateValue: true
      - fromGroup: ainudge-env-group

  # Celery Worker Service
  - type: web
    name: ai-nudge-celery-worker
    env: docker
    plan: free
    rootDir: backend
    startCommand: "celery -A celery_worker.celery_app worker --loglevel=info" # ðŸ‘ˆ START COMMAND ADDED
    envVars:
      - key: PYTHONPATH
        value: .
      - key: RUNNING_IN_CELERY
        value: "true"
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-nudge-redis
          property: connectionString
      - key: JWT_SECRET_KEY
        generateValue: true
      - fromGroup: ainudge-env-group

  # Celery Beat Scheduler Service
  - type: web
    name: ai-nudge-celery-beat
    env: docker
    plan: free
    rootDir: backend
    startCommand: "celery -A celery_worker.celery_app beat --loglevel=info" # ðŸ‘ˆ START COMMAND ADDED
    envVars:
      - key: PYTHONPATH
        value: .
      - key: RUNNING_IN_CELERY
        value: "true"
      - key: DATABASE_URL
        fromDatabase:
          name: ai-nudge-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          type: redis
          name: ai-nudge-redis
          property: connectionString
      - key: JWT_SECRET_KEY
        generateValue: true
      - fromGroup: ainudge-env-group

  # Redis Service
  - type: redis
    name: ai-nudge-redis
    plan: free
    ipAllowList: []

databases:
  # PostgreSQL Database
  - name: ai-nudge-db
    databaseName: ai_nudge_db
    user: ai_nudge_user
    plan: free