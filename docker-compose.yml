# Local Development Configuration
# This file defines the services and databases for the AI Nudge local application.
# It is used to run the application locally.
# Docker Compose (Dev): ENVIRONMENT: development â†’ dev-login endpoint available 
services:
  # ---------- DATABASE ----------
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: realestate_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai_nudge_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ---------- REDIS ----------
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - ai_nudge_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # ---------- BACKEND (FastAPI) ----------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8001:8000"
    environment:
      ENVIRONMENT: development
      WEBSOCKET_ALLOWED_ORIGINS: '["http://localhost:3000"]'
      PYTHONPATH: /app
      RUNNING_IN_CELERY: "true"
      DATABASE_URL: postgresql://postgres:password123@db:5432/realestate_db
      REDIS_URL: redis://redis:6379
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    networks:
      - ai_nudge_net
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ---------- CELERY WORKER ----------
  celery-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: celery -A celery_worker.celery_app worker --loglevel=info --concurrency=2
    environment:
      ENVIRONMENT: development
      PYTHONPATH: /app
      RUNNING_IN_CELERY: "true"
      DATABASE_URL: postgresql://postgres:password123@db:5432/realestate_db
      REDIS_URL: redis://redis:6379
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    networks:
      - ai_nudge_net
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ---------- CELERY BEAT SCHEDULER ----------
  celery-beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: celery -A celery_worker.celery_app beat --loglevel=info --schedule=/app/celerybeat-schedule.db
    environment:
      ENVIRONMENT: development
      PYTHONPATH: /app
      RUNNING_IN_CELERY: "true"
      DATABASE_URL: postgresql://postgres:password123@db:5432/realestate_db
      REDIS_URL: redis://redis:6379
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - celery_beat_data:/app/celery_beat_data
    networks:
      - ai_nudge_net
    depends_on:
      backend:
        condition: service_started
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  # ---------- FRONTEND (Next.js) ----------
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: npm run dev
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8001
      NODE_ENV: development
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    networks:
      - ai_nudge_net
    depends_on:
      - backend

# ---------- NETWORKS ----------
networks:
  ai_nudge_net:
    driver: bridge
    name: ai_nudge_network

# ---------- VOLUMES ----------
volumes:
  postgres_data:
    name: ai_nudge_postgres_data
  frontend_node_modules:
    name: ai_nudge_frontend_node_modules
  frontend_next:
    name: ai_nudge_frontend_next
  celery_beat_data:
    name: ai_nudge_celery_beat_data
