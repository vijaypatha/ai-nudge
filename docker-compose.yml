# Docker Compose configuration for AI Nudge application
# --- DEFINITIVE FIX: Removes conflicting 'environment' block from backend service ---

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: realestate_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - ai_nudge_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  # Redis Service for Celery
  redis:
    image: redis:7-alpine
    networks:
      - ai_nudge_net
    ports:
      - "6379:6379"

  # Backend API Service (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    # --- MODIFIED: Removed the 'environment' block ---
    # The 'env_file' directive below is the correct and sufficient way to load
    # all necessary variables from the .env file. This resolves the override conflict.
    environment:
    - WEBSOCKET_ALLOWED_ORIGINS=["http://localhost:3000"]
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    networks:
      - ai_nudge_net
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  # Frontend Service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      - backend
    networks:
      - ai_nudge_net
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001

  # Celery Worker Service
  celery-worker:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - PYTHONPATH=/app
    command: celery -A celery_worker.celery_app worker --loglevel=info
    networks:
      - ai_nudge_net
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      backend:
        condition: service_started

  # Celery Beat Scheduler Service
  celery-beat:
    build:
      context: ./backend
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env
    environment:
      - PYTHONPATH=/app
    command: celery -A celery_worker.celery_app beat --loglevel=info
    networks:
      - ai_nudge_net
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      backend:
        condition: service_started

# Network Configuration
networks:
  ai_nudge_net:
    driver: bridge

# Volume Configuration
volumes:
  postgres_data:
    driver: local