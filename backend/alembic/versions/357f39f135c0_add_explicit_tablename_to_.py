"""Add explicit tablename to ScheduledMessage model

Revision ID: 357f39f135c0
Revises: ea68fcacaed1
Create Date: 2025-07-24 12:41:20.370197

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel



# revision identifiers, used by Alembic.
revision: str = '357f39f135c0'
down_revision: Union[str, Sequence[str], None] = 'ea68fcacaed1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_type', sa.Enum('REALTOR', 'THERAPIST', 'LOAN_OFFICER', name='usertype'), nullable=True),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('vertical', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tool_provider', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('onboarding_complete', sa.Boolean(), nullable=False),
    sa.Column('onboarding_state', sa.JSON(), nullable=True),
    sa.Column('market_focus', sa.JSON(), nullable=True),
    sa.Column('ai_style_guide', sa.JSON(), nullable=True),
    sa.Column('strategy', sa.JSON(), nullable=True),
    sa.Column('mls_username', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('mls_password', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('license_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('specialties', sa.JSON(), nullable=True),
    sa.Column('faq_auto_responder_enabled', sa.Boolean(), nullable=False),
    sa.Column('twilio_phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=False)
    op.create_index(op.f('ix_user_phone_number'), 'user', ['phone_number'], unique=True)
    op.create_index(op.f('ix_user_timezone'), 'user', ['timezone'], unique=False)
    op.create_index(op.f('ix_user_tool_provider'), 'user', ['tool_provider'], unique=False)
    op.create_index(op.f('ix_user_twilio_phone_number'), 'user', ['twilio_phone_number'], unique=False)
    op.create_index(op.f('ix_user_vertical'), 'user', ['vertical'], unique=False)
    op.create_table('client',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('notes_embedding', sa.JSON(), nullable=True),
    sa.Column('ai_tags', sa.JSON(), nullable=True),
    sa.Column('user_tags', sa.JSON(), nullable=True),
    sa.Column('preferences', sa.JSON(), nullable=True),
    sa.Column('last_interaction', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_client_email'), 'client', ['email'], unique=True)
    op.create_index(op.f('ix_client_phone'), 'client', ['phone'], unique=False)
    op.create_index(op.f('ix_client_user_id'), 'client', ['user_id'], unique=False)
    op.create_table('contentresource',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('categories', sa.JSON(), nullable=True),
    sa.Column('content_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'ARCHIVED', name='resourcestatus'), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_contentresource_created_at'), 'contentresource', ['created_at'], unique=False)
    op.create_index(op.f('ix_contentresource_status'), 'contentresource', ['status'], unique=False)
    op.create_index(op.f('ix_contentresource_title'), 'contentresource', ['title'], unique=False)
    op.create_index(op.f('ix_contentresource_updated_at'), 'contentresource', ['updated_at'], unique=False)
    op.create_index(op.f('ix_contentresource_url'), 'contentresource', ['url'], unique=False)
    op.create_index(op.f('ix_contentresource_usage_count'), 'contentresource', ['usage_count'], unique=False)
    op.create_index(op.f('ix_contentresource_user_id'), 'contentresource', ['user_id'], unique=False)
    op.create_table('faq',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('answer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('marketevent',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('event_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entity_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entity_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('market_area', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('processed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marketevent_id'), 'marketevent', ['id'], unique=False)
    op.create_index(op.f('ix_marketevent_status'), 'marketevent', ['status'], unique=False)
    op.create_index(op.f('ix_marketevent_user_id'), 'marketevent', ['user_id'], unique=False)
    op.create_table('resource',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('resource_type', sa.Enum('PROPERTY', 'WEB_CONTENT', 'CONTENT_RESOURCE', name='resourcetype'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'ARCHIVED', name='resourcestatus'), nullable=False),
    sa.Column('entity_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('attributes', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_resource_created_at'), 'resource', ['created_at'], unique=False)
    op.create_index(op.f('ix_resource_entity_id'), 'resource', ['entity_id'], unique=False)
    op.create_index(op.f('ix_resource_resource_type'), 'resource', ['resource_type'], unique=False)
    op.create_index(op.f('ix_resource_status'), 'resource', ['status'], unique=False)
    op.create_index(op.f('ix_resource_updated_at'), 'resource', ['updated_at'], unique=False)
    op.create_index(op.f('ix_resource_user_id'), 'resource', ['user_id'], unique=False)
    op.create_table('message',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('direction', sa.Enum('INBOUND', 'OUTBOUND', name='messagedirection'), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'FAILED', 'CANCELLED', 'RECEIVED', name='messagestatus'), nullable=False),
    sa.Column('source', sa.Enum('MANUAL', 'SCHEDULED', 'FAQ_AUTO_RESPONSE', 'INSTANT_NUDGE', name='messagesource'), nullable=False),
    sa.Column('sender_type', sa.Enum('USER', 'AI', 'SYSTEM', name='messagesendertype'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('originally_scheduled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_client_id'), 'message', ['client_id'], unique=False)
    op.create_index(op.f('ix_message_created_at'), 'message', ['created_at'], unique=False)
    op.create_index(op.f('ix_message_direction'), 'message', ['direction'], unique=False)
    op.create_index(op.f('ix_message_originally_scheduled_at'), 'message', ['originally_scheduled_at'], unique=False)
    op.create_index(op.f('ix_message_sender_type'), 'message', ['sender_type'], unique=False)
    op.create_index(op.f('ix_message_source'), 'message', ['source'], unique=False)
    op.create_index(op.f('ix_message_user_id'), 'message', ['user_id'], unique=False)
    op.create_table('campaignbriefing',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=True),
    sa.Column('triggering_resource_id', sa.Uuid(), nullable=True),
    sa.Column('parent_message_id', sa.Uuid(), nullable=True),
    sa.Column('is_plan', sa.Boolean(), nullable=False),
    sa.Column('campaign_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('headline', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('key_intel', sa.JSON(), nullable=True),
    sa.Column('matched_audience', sa.JSON(), nullable=True),
    sa.Column('original_draft', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'ACTIVE', 'PAUSED', 'COMPLETED', 'CANCELLED', name='campaignstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['parent_message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['triggering_resource_id'], ['resource.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_campaignbriefing_campaign_type'), 'campaignbriefing', ['campaign_type'], unique=False)
    op.create_index(op.f('ix_campaignbriefing_client_id'), 'campaignbriefing', ['client_id'], unique=False)
    op.create_index(op.f('ix_campaignbriefing_is_plan'), 'campaignbriefing', ['is_plan'], unique=False)
    op.create_index(op.f('ix_campaignbriefing_parent_message_id'), 'campaignbriefing', ['parent_message_id'], unique=False)
    op.create_index(op.f('ix_campaignbriefing_status'), 'campaignbriefing', ['status'], unique=False)
    op.create_index(op.f('ix_campaignbriefing_triggering_resource_id'), 'campaignbriefing', ['triggering_resource_id'], unique=False)
    op.create_index(op.f('ix_campaignbriefing_user_id'), 'campaignbriefing', ['user_id'], unique=False)
    op.create_table('scheduledmessage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('client_id', sa.Uuid(), nullable=False),
    sa.Column('parent_plan_id', sa.Uuid(), nullable=True),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scheduled_at_utc', sa.DateTime(), nullable=False),
    sa.Column('timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'FAILED', 'CANCELLED', 'RECEIVED', name='messagestatus'), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('celery_task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('playbook_touchpoint_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_recurring', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['parent_plan_id'], ['campaignbriefing.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scheduledmessage_celery_task_id'), 'scheduledmessage', ['celery_task_id'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_is_recurring'), 'scheduledmessage', ['is_recurring'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_parent_plan_id'), 'scheduledmessage', ['parent_plan_id'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_playbook_touchpoint_id'), 'scheduledmessage', ['playbook_touchpoint_id'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_scheduled_at_utc'), 'scheduledmessage', ['scheduled_at_utc'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_status'), 'scheduledmessage', ['status'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_timezone'), 'scheduledmessage', ['timezone'], unique=False)
    op.create_index(op.f('ix_scheduledmessage_user_id'), 'scheduledmessage', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_scheduledmessage_user_id'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_timezone'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_status'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_scheduled_at_utc'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_playbook_touchpoint_id'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_parent_plan_id'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_is_recurring'), table_name='scheduledmessage')
    op.drop_index(op.f('ix_scheduledmessage_celery_task_id'), table_name='scheduledmessage')
    op.drop_table('scheduledmessage')
    op.drop_index(op.f('ix_campaignbriefing_user_id'), table_name='campaignbriefing')
    op.drop_index(op.f('ix_campaignbriefing_triggering_resource_id'), table_name='campaignbriefing')
    op.drop_index(op.f('ix_campaignbriefing_status'), table_name='campaignbriefing')
    op.drop_index(op.f('ix_campaignbriefing_parent_message_id'), table_name='campaignbriefing')
    op.drop_index(op.f('ix_campaignbriefing_is_plan'), table_name='campaignbriefing')
    op.drop_index(op.f('ix_campaignbriefing_client_id'), table_name='campaignbriefing')
    op.drop_index(op.f('ix_campaignbriefing_campaign_type'), table_name='campaignbriefing')
    op.drop_table('campaignbriefing')
    op.drop_index(op.f('ix_message_user_id'), table_name='message')
    op.drop_index(op.f('ix_message_source'), table_name='message')
    op.drop_index(op.f('ix_message_sender_type'), table_name='message')
    op.drop_index(op.f('ix_message_originally_scheduled_at'), table_name='message')
    op.drop_index(op.f('ix_message_direction'), table_name='message')
    op.drop_index(op.f('ix_message_created_at'), table_name='message')
    op.drop_index(op.f('ix_message_client_id'), table_name='message')
    op.drop_table('message')
    op.drop_index(op.f('ix_resource_user_id'), table_name='resource')
    op.drop_index(op.f('ix_resource_updated_at'), table_name='resource')
    op.drop_index(op.f('ix_resource_status'), table_name='resource')
    op.drop_index(op.f('ix_resource_resource_type'), table_name='resource')
    op.drop_index(op.f('ix_resource_entity_id'), table_name='resource')
    op.drop_index(op.f('ix_resource_created_at'), table_name='resource')
    op.drop_table('resource')
    op.drop_index(op.f('ix_marketevent_user_id'), table_name='marketevent')
    op.drop_index(op.f('ix_marketevent_status'), table_name='marketevent')
    op.drop_index(op.f('ix_marketevent_id'), table_name='marketevent')
    op.drop_table('marketevent')
    op.drop_table('faq')
    op.drop_index(op.f('ix_contentresource_user_id'), table_name='contentresource')
    op.drop_index(op.f('ix_contentresource_usage_count'), table_name='contentresource')
    op.drop_index(op.f('ix_contentresource_url'), table_name='contentresource')
    op.drop_index(op.f('ix_contentresource_updated_at'), table_name='contentresource')
    op.drop_index(op.f('ix_contentresource_title'), table_name='contentresource')
    op.drop_index(op.f('ix_contentresource_status'), table_name='contentresource')
    op.drop_index(op.f('ix_contentresource_created_at'), table_name='contentresource')
    op.drop_table('contentresource')
    op.drop_index(op.f('ix_client_user_id'), table_name='client')
    op.drop_index(op.f('ix_client_phone'), table_name='client')
    op.drop_index(op.f('ix_client_email'), table_name='client')
    op.drop_table('client')
    op.drop_index(op.f('ix_user_vertical'), table_name='user')
    op.drop_index(op.f('ix_user_twilio_phone_number'), table_name='user')
    op.drop_index(op.f('ix_user_tool_provider'), table_name='user')
    op.drop_index(op.f('ix_user_timezone'), table_name='user')
    op.drop_index(op.f('ix_user_phone_number'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
